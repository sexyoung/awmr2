# https://dev.to/dyarleniber/setting-up-a-ci-cd-workflow-on-github-actions-for-a-react-app-with-github-pages-and-codecov-4hnp

name: deploy to tsb server
on:
  pull_request:
    branches:
      - master
    types: [ closed ]

jobs:
  build-uat:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment:
      name: uat

    steps:

    - name: 使用 node 12.16.0
      uses: actions/setup-node@v2
      with:
        node-version: '12.16.0'

    - name: 下載程式碼 & 下載 submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: 建立快照 (node_modules)
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: 安裝 node 套件
      run: yarn

    - name: 給予環境變數
      run: |
        cp .env.ci .env
        echo "REACT_APP_GA=UA-196856772-1" >> .env
        echo "REACT_APP_API_URL=${{ secrets.API }}" >> .env
        echo "REACT_APP_URL=https://test.twsongbeer.com" >> .env
        echo "REACT_APP_LRID=jk2u/testtwsongbeer" >> .env
        cat .env
    - name: 跑個測試唄
      run: |
        ls -al
        npm test -- --coverage --watchAll=false -u
    - name: 打包
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 10
        command: npm run build
    
    - name: 壓縮 build 資料夾
      uses: TonyBogdanov/zip@1.0
      with:
        args: zip -qq -r ./build.zip ./build

    - name: 上傳 build 🆙
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          build.zip
  deploy-uat: # 部署
    runs-on: ubuntu-latest
    needs: build-uat
    environment:
      name: uat
      url: https://test.twsongbeer.com/
    steps:
      - name: 下載 build.zip 資料夾 🆙
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: 解壓 build.zip 資料夾
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./build.zip -d ./

      - name: 上傳程式碼到server
        uses: appleboy/scp-action@master
        env:
          HOST: ${{secrets.HOST}}
          USERNAME: ${{secrets.USER}}
          PORT: 22
          KEY: ${{ secrets.KEY }}
        with:
          source: "build/*,!.git,!build.zip"
          target: "~/apps/twsongbeer-test/public"

      - name: 改一下位置唄
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd apps/twsongbeer-test
            mv public trash
            mv trash/build .
            mv build public
            rm -rf ./trash
            chmod -R 775 public
          host: ${{secrets.HOST}}
          username: ${{secrets.USER}}
          privateKey: ${{ secrets.KEY }}

  slack-notice-uat: # 部署
    runs-on: ubuntu-latest
    needs: deploy-uat
    steps:
      - name: 通知 Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: ${{ job.status }}
          fields: workflow,message,author # default: repo,commit
          mention: here
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.UAT_SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  build-prd:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: deploy-uat
    environment:
      name: uat

    steps:

    - name: 使用 node 12.16.0
      uses: actions/setup-node@v2
      with:
        node-version: '12.16.0'

    - name: 下載程式碼 & 下載 submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: 建立快照 (node_modules)
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: 安裝 node 套件
      run: yarn

    - name: 給予環境變數
      run: |
        cp .env.ci .env
        echo "REACT_APP_GA=UA-196856772-1" >> .env
        echo "REACT_APP_API_URL=${{ secrets.PRD_API }}" >> .env
        echo "REACT_APP_URL=https://www.twsongbeer.com" >> .env
        echo "REACT_APP_LRID=jk2u/twsongbeer" >> .env
        cat .env
    - name: 跑個測試唄
      run: |
        ls -al
        npm test -- --coverage --watchAll=false -u
    - name: 打包
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 10
        command: npm run build
    
    - name: 壓縮 build 資料夾
      uses: TonyBogdanov/zip@1.0
      with:
        args: zip -qq -r ./build.zip ./build

    - name: 上傳 build 🆙
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          build.zip
  deploy-prd: # 部署
    runs-on: ubuntu-latest
    needs: build-prd
    environment:
      name: prd
      url: https://www.twsongbeer.com/
    steps:
      - name: 下載 build.zip 資料夾 🆙
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: 解壓 build.zip 資料夾
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./build.zip -d ./

      - name: 上傳程式碼到server
        uses: appleboy/scp-action@master
        env:
          HOST: ${{secrets.HOST}}
          USERNAME: ${{secrets.USER}}
          PORT: 22
          KEY: ${{ secrets.KEY }}
        with:
          source: "build/*,!.git,!build.zip"
          target: "~/apps/twsongbeer/public"

      - name: 改一下位置唄
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd apps/twsongbeer
            mv public trash
            mv trash/build .
            mv build public
            rm -rf ./trash
            chmod -R 775 public
          host: ${{secrets.HOST}}
          username: ${{secrets.USER}}
          privateKey: ${{ secrets.KEY }}

  slack-notice-prd: # 部署
    runs-on: ubuntu-latest
    needs: deploy-prd
    steps:
      - name: 通知 Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: ${{ job.status }}
          fields: workflow,message,author # default: repo,commit
          mention: here
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PRD_SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.