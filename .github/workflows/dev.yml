# https://dev.to/dyarleniber/setting-up-a-ci-cd-workflow-on-github-actions-for-a-react-app-with-github-pages-and-codecov-4hnp

name: deploy to dev server
on:
  push:
    branches: [ develop ]

jobs:
  build-dev:
    runs-on: ubuntu-latest

    steps:

    - name: 使用 node 16.15.0
      uses: actions/setup-node@v3
      with:
        node-version: '16.15.0'

    - name: 下載程式碼 & 下載 submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: 建立快照 (node_modules)
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: 安裝 node 套件
      run: npm i

    - name: 給予環境變數
      run: |
        touch .env
        echo {{secrets.DATABASE_URL}} >> .env
        echo {{secrets.MAP8_KEY}} >> .env
        cat .env

    # - name: 跑個測試唄
    #   run: npm test -- --coverage --watchAll=false -u

    - name: 打包
      run: npm run build

    # - name: 打包
    #   uses: nick-invision/retry@v2
    #   with:
    #     timeout_minutes: 10
    #     max_attempts: 3
    #     command: npm run build
    
    - name: 壓縮 build 資料夾
      uses: TonyBogdanov/zip@1.0
      with:
        args: zip -qq -r ./build.zip ./build

    - name: 上傳 build 🆙
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: |
          build.zip

  deploy-dev: # 部署
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - name: 下載 build.zip 資料夾 🆙
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: 解壓 build.zip 資料夾
        uses: TonyBogdanov/zip@1.0
        with:
          args: unzip -qq ./build.zip -d ./

      - name: 上傳程式碼到server
        uses: appleboy/scp-action@master
        env:
          HOST: ${{secrets.HOST}}
          USERNAME: ${{secrets.USER}}
          PORT: 22
          KEY: ${{ secrets.KEY }}
        with:
          source: "./,!.git,!build.zip"
          target: "~/web/awmr-2-dev"

      - name: 改一下位置唄
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd web
            mv awmr-2-dev trash
            mv trash/build .
            mv trash/package.json ./build
            mv trash/node_modules ./build
            mv build awmr-2-dev
            rm -rf ./trash
            chmod -R 775 awmr-2-dev
          host: ${{secrets.HOST}}
          username: ${{secrets.USER}}
          privateKey: ${{ secrets.KEY }}

  # slack-notice: # 通知啦幹
  #     runs-on: ubuntu-latest
  #     needs: deploy-dev
  #     steps:
  #       - name: 通知 Slack
  #         uses: 8398a7/action-slack@v3
  #         with:
  #           status: ${{ job.status }}
  #           author_name: ${{ job.status }}
  #           fields: workflow,message,author # default: repo,commit
  #           mention: here
  #           if_mention: failure,cancelled
  #         env:
  #           SLACK_WEBHOOK_URL: ${{ secrets.DEV_SLACK_WEBHOOK_URL }} # required
  #         if: always() # Pick up events even if the job fails or is canceled.
